{"version":3,"file":"static/js/127.d0547105.chunk.js","mappings":"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","sources":["Pages/Food/Food.js","../node_modules/@mui/system/esm/Container/Container.js","../node_modules/@mui/system/esm/createStyled.js","../node_modules/@mui/system/esm/styled.js","../node_modules/@mui/system/esm/Container/createContainer.js"],"sourcesContent":["import { Container } from \"@mui/system\";\r\nimport React from \"react\";\r\nimport sandwich from \"../../Images/food_sandwich.png\";\r\nimport breadcrumbles from \"../../Images/food_breadcrumbs.png\";\r\nimport aletria from \"../../Images/food_aletria.png\";\r\nimport \"../Home/home.css\";\r\n\r\nfunction Food() {\r\n  return (\r\n    <div>\r\n      <Container style={{ position: \"relative\", marginTop: \"20px\" }}>\r\n        <div\r\n          style={{ width: \"100%\", position: \"absolute\", top: \"0\", left: \"0\" }}\r\n        >\r\n          <svg\r\n            class=\"torn-paper-effect\"\r\n            preserveAspectRatio=\"none\"\r\n            width=\"100%\"\r\n            height=\"20px\"\r\n            viewBox=\"0 0 1920 27\"\r\n            enable-background=\"new 0 0 1920 27\"\r\n          >\r\n            <path\r\n              style={{ fill: \"#003\" }}\r\n              d=\"M1906.688,12.029c-1.653-1.78-3.943-0.347-5.823-0.883c-0.623,0.442-0.879,1.208-1.873,1.044 c-1.992-1.974-5.01-1.6-7.448-2.713c-0.417,0.074-0.441,0.997-1.238,0.33c-0.103-0.113-0.323-0.356-1.033-1.142 c-0.492,0.938-0.948,1.805-1.409,2.683c-2.1-2.389-5.174,0.159-7.012-2.03c-0.991,1.465-3.179,0.306-4.117,1.874\r\n\tc-0.5-0.379-0.778-1.019-1.599-0.989c-3.682,0.135-6.783,2.202-10.129,2.986c-2.646-2.246-6.298,0.391-8.975-2.322\r\n\tc-1.84,3.085-5.408-0.125-7.492,2.352c-2.784-1.202-5.6-0.211-7.657,1.15c-2.544,1.684-5.658-0.525-7.617,2.049\r\n\tc-0.711-0.49-1.225-0.845-1.762-1.215c-1.235,0.125-2.3,1.9-3.511,0.95c-1.499-1.176-3.069-1.008-4.633-0.888\r\n\tc-1.598,0.122-2.832-0.717-3.89-1.47c-1.507-1.073-2.629-2.676-4.531-0.757c-2.571-1.628-5.022,1.022-7.607,0.219\r\n\tc-0.723-0.225-1.504-0.072-2.258,0.563c-1.085,0.914-2.433,0.347-4.001,0.191c-0.359-0.553-0.792-1.217-1.557-2.392\r\n\tc-0.742,1.224-1.258,2.076-1.313,2.166c-2.294,1.216-3.012-0.829-4.299-0.584c-2.297,1.75-4.521,1.209-6.864-0.046\r\n\tc-0.324,0.259-0.688,0.799-1.059,0.804c-4.448,0.06-8.899,0.038-13.98,0.038c-0.24-0.405-0.749-1.262-1.173-1.976\r\n\tc-2.149,1.008-3.842,2.035-5.738,0.538c-1.279-1.01-3.3,0.474-4.443-1.4c-0.961-1.577-3.543-0.592-4.438-2.496\r\n\tc-3.05-0.142-5.799-2.602-9.159-0.84c-1.687,0.884-4.072,1.045-5.593-0.089c-1.931-1.44-2.974,0.217-4.092,0.435\r\n\tc-1.995-0.727-3.73-1.358-5.471-1.992c-1.57,1.758-3.127,1.162-4.602-0.068c-1.607,1.257-3.317,1.732-4.943,0.605\r\n\tc-0.969-0.671-1.885-0.5-2.809-0.466c-3.405,0.126-6.516-1.034-9.699-2.036c-0.351,0.323-0.711,0.655-1.266,1.166\r\n\tc-0.591-0.759-1.198-1.538-1.725-2.212c-2.557,0-4.875,0-8.18,0c-0.132-0.319-0.531-1.282-0.687-1.656\r\n\tc-1.575-0.655-1.718,0.829-2.71,0.698c-0.934,0.347-1.032-1.229-2.004-0.986c-0.555-0.477-1.205-0.576-1.831-0.262\r\n\tc-4.749,2.376-9.568,1.722-14.54,0.734c-3.522-0.699-7.345-0.937-10.771-0.021c-8.529,2.281-14.354-0.386-22.609-1.185\r\n\tc-0.667,0-3.228,0.765-3.895,0.765c-0.269,1.448-2.103,0.853-2.87,2.04c-2.285-0.507-4.856,0.825-6.996-1.004\r\n\tc-0.521,0.312-0.772,1.039-1.604,0.942c-2.775-0.322-5.41,0.34-7.854,1.536c-1.457,0.712-3.183,0.871-4.261,0.345\r\n\tc-3.696-1.805-7.167-0.856-10.271,0.122c-1.912-0.04-2.112-2.065-3.931-2.006c-1.694-0.765-1.941,1.694-3.332,1.995\r\n\tc-1.699,0-3.39,0.18-5.024-0.049c-1.732-0.243-2.798,1.396-4.604,1.124c-2.718-0.409-5.469-0.152-7.379,2.128\r\n\tc-2.17-1.577-4.005,0.289-5.965-0.134c-2.103-0.454-4.128,0.208-5.64,1.813c-3.357,0.918-6.184-1.798-9.276-0.846\r\n\tc-0.445-0.925-0.152-1.714-0.918-2.031c-0.971-0.401-1.309,0.68-2.029,0.883c-0.604-1.118-1.666-0.873-2.634-0.885\r\n\tc-1.143-0.013-2.285-0.003-3.268-0.003c-1.106-1.114-2.044-2.06-2.726-2.746c-1.358-0.58-2.729,0.321-3.578-0.645\r\n\tc-1.388-1.575-3.174,0.984-4.441-0.609c-4.224,1.665-8.423,1.515-12.691,0.062c-0.804-0.273-1.865-0.181-2.867,0.204\r\n\tc-3.121,1.199-6.329,2.133-10.131,1.631c-0.475,0.7-1.028,1.521-1.345,1.989c-2.119,0.122-3.817-0.032-5.385,0.352\r\n\tc-9.312,2.279-14.828,3.395-21.018,2.769c-0.495-0.05-1.111-0.196-1.481,0.024c-2.459,1.461-5.34,1.699-7.979,2.411\r\n\tc-2.833,0.764-5.061,2.335-7.593,3.466c-0.969,0.433-1.489,1.215-2.317,1.644c-3.614,1.874-8.017,1.064-11.524,3.343\r\n\tc-3.526-2.029-7.422-0.189-11.06-1.061c-0.589-0.589-1.179-1.178-1.834-1.834c-3.257,0-6.584-0.095-9.903,0.026\r\n\tc-3.349,0.123-5.717-2.383-8.814-3.184c-0.867,0.785-1.689,1.528-2.857,2.584c-0.712-1.586-2.597-1.038-3.396-2.375\r\n\tc-4.875-0.261-9.631-0.244-13.903,2.711c-0.939,0.65-2.543,0.629-3.646-0.316c-1.049-0.897-2.626-0.786-3.243-0.338\r\n\tc-1.525,1.113-3.112,1.029-4.655,0.83c-1.742-0.225-3.054,1.255-4.583,1.003c-2.853-0.469-5.448,0.766-8.049,1.29\r\n\tc-1.847,0.371-3.941,0.443-5.849,1.488c-2.252,1.235-4.988,2.07-7.542,2.143c-2.824,0.081-5.771,1.03-8.669-0.719\r\n\tc-1.008-0.608-3.135-0.79-4.648,0.541c-0.876,0.771-2.188,0.289-3.313,0.232c-0.589-0.591-1.179-1.181-1.768-1.771\r\n\tc-1.306-0.537-3.041,0.573-4.061-1.059c-3.901-0.564-7.618-2.124-11.633-2.111c-1.087,0.004-2.119,0.145-3.253-0.631\r\n\tc-1.381-0.944-2.94-0.271-4.455,0.588c-1.642,0.931-3.068-1.93-4.954-0.711c-0.273,0.178-0.443,0.617-0.717,0.676\r\n\tc-2.816,0.599-5.678,1.731-8.461,1.572c-4.614-0.264-9.223-1.017-13.843-1.456c-5.847-0.556-11.815,1.072-17.592-0.986\r\n\tc-0.592-0.211-1.58-0.312-1.946,0.02c-1.806,1.633-4.211,1.089-6.27,1.794c-2.087,0.716-4.611,0.158-6.944,0.158\r\n\tc-1.503-0.432-2.372-2.113-4.172-2.019c-1.662,0.087-3.478-0.396-4.961,0.126c-1.763,0.62-3.121-2.656-4.758-0.227\r\n\tc-1.436-2.093-2.76,0.089-4.118,0.178c-5.541,0.364-10.891-0.694-16.074-2.332c-1.263-0.398-2.465-0.812-3.678-0.678\r\n\tc-2.656,0.294-5.127-0.484-7.456-1.379c-2.272-0.874-4.205-0.792-6.463-0.06c-7.844,2.541-6.753,3.244-15.267,0.626\r\n\tc-3.086-0.949-5.96-2.991-9.862-2.097c-0.385-0.789-0.739-1.516-1.019-2.087c-2.055,1.425-3.956,1.311-5.706,0.346\r\n\tc-1.307-0.72-2.924-0.75-3.775-0.278c-2.287,1.266-4.743,0.539-6.987,1.041c-0.512,2.917-2.846,3.626-4.926,3.726\r\n\tc-2.612,0.124-5.023,0.659-7.318,1.736c-0.653,0.306-1.226,0.383-1.847,0.363c-2.501-0.082-4.068,1.571-5.756,3.013\r\n\tc-2.233,0.087-4.569-0.512-6.791,1.418c-0.471-1.835-1.769-1.304-2.878-1.432c-1.256-0.146-2.88,0.903-3.375,0.583\r\n\tc-1.313-0.849-2.553-0.435-3.8-0.543c-1.323-0.114-2.667-0.082-3.997-0.014c-3.085,0.157-5.937-1.626-9.063-1.063\r\n\tc-1.444-1.706-3.651-1.35-5.054-0.812c-3.057,1.172-6.092,0.68-9.137,0.865c-0.644,0.039-1.326-0.01-1.922,0.189\r\n\tc-3.33,1.112-6.717,1.99-10.247,1.782c-4.751-0.28-9.317,1.747-14.083,1.016c-0.645-0.099-0.807,0.622-1.214,0.686\r\n\tc-2.856,0.444-5.156,2.096-8.292,3.524c-2.365-0.867-6.328-2.242-7.198-2.998c-2.773-1.573-5.327,2.088-8.085,0.087\r\n\tc-2.148,1.771-5.14-0.317-7.36,1.629c-0.443,0.388-1.774,0.116-2.783-0.26c-3.272-1.218-6.678-0.943-10.029-0.181\r\n\tc-1.969,0.448-3.911,1.011-5.864,1.521c-2.057-2.154-4.113-0.146-6.17,0c-3.287-1.954-6.9-2.259-10.441-1.98\r\n\tc-1.35-1.258-2.661-1.43-4.34-1.475c-1.521-0.041-3.323-1.036-4.664-1.791c-1.818-1.022-3.526-0.294-5.167-0.868\r\n\tc-0.98-1.14-2.457-1.3-3.7-1.961c-0.413,0.362-0.778,0.682-1.144,1.002c-0.575-0.178-0.733-1.094-2.059-0.819\r\n\tc-2.482,2.394-6.367,2.596-10.038,3.972c-0.554-0.703-1.166-1.48-1.646-2.09c-1.979,0-4.188,0.655-5.173-0.163\r\n\tc-1.275-1.062-3.067-0.118-3.902-1.604c-1.041,0.813-2.247,0.834-3.494,0.791c-1.498-0.051-2.998-0.007-4.497-0.014\r\n\tc-0.628-0.003-0.699,1.07-1.693,0.694c-0.168-0.025-0.191-0.975-0.831-0.406c-0.595,0.832,0.337,2.039-1.103,2.948\r\n\tc-4.826-1.897-10.075-3.35-15.699-3.981c-1.394,1.522-3.377,0.406-5.231,0.826c-0.671-0.881-1.173-1.539-1.694-2.225\r\n\tc-3.583,1.016-6.671-1.573-10.036-0.792c-0.321-0.779-0.555-1.348-0.792-1.918c-0.626-0.23-1.209-0.299-1.579,0.402\r\n\tc0.392,0.502,1.087,0.815,0.885,1.839c-0.179,0.216-0.486,0.574-0.78,0.944c-1.035,1.3-2.845,0.007-3.629,0.784\r\n\tc-1.345,1.334-2.823,0.95-4.168,0.8c-1.271-0.141-2.348,1.22-3.343,0.52c-1.493-1.049-2.836,0.617-3.76,0.188\r\n\tc-3.873-1.803-7.05,0.221-10.776,1.511c-0.034-1.703-1.615-1.113-2.562-1.535c-1.959-0.873-4.205-1.103-6.333-1.597\r\n\tc-2.651,2.137-5.744,0.481-8.584,0.997c-1.03,0.187-1.323-1.671-2.58-0.931c-0.573,0.574-1.162,1.163-1.979,1.98\r\n\tc-3.573-0.473-7.454,0.813-11.184-0.814c-0.588,0.588-1.178,1.177-1.856,1.855c-0.747-1.711-2.58-1.477-3.434-0.98\r\n\tc-2.351,1.366-4.772,0.632-7.144,0.905c-2.861,0.331-5.878-0.878-8.616,0.939c-0.418,0.277-1.558,0.173-1.839-0.177\r\n\tc-0.937-1.166-2.153-0.861-3.209-0.732c-2.721,0.335-4.974-0.697-7.014-2.082c-1.225,0.262-2.051,0.971-3.23,1.146\r\n\tc-1.83,0.272-3.478-1.175-5.255-0.274c-1.221-1.703-3.44-0.036-4.774-1.426c-0.81-0.844-1.946-0.515-2.812-0.338\r\n\tc-1.199,0.245-2.174,1.308-3.604,0.95c-1.085-0.271-2.321,0.4-3.334-0.396c-0.89-0.699-1.901,0.168-2.997-0.49\r\n\tc-0.985-0.593-2.724-0.445-3.89,0.755c-0.626-0.689-1.18-1.299-1.712-1.886c-0.417,0.359-0.834,0.993-1.151,0.946\r\n\tc-2.219-0.328-4.478,0.692-6.735-0.643c-1.276-0.755-3.208-0.837-4.623,0.225c-0.953,0.714-1.799,0.449-2.726,0.279\r\n\tc-0.216-0.592-0.427-1.169-0.691-1.895c-2.699,0.559-5.569-0.833-8.078,0.906c-2.688-2.219-6.326,0.428-9.251-1.695\r\n\tc-1.083-0.785-3.216-0.127-4.599-0.127c-1.52,1.064-2.737,2.025-4.478,2.028c-1.248,0.001-2.699-0.55-3.62,0.888\r\n\tc-1.256-1.885-2.411-0.326-3.646,0.052c-0.609,0.187-1.425,0.252-1.974-0.003c-4.376-2.026-9.253-1.71-13.748-3.037\r\n\tc-2.021-0.598-3.899-1.248-5.899-0.768c-2.022,2.468-5.151,2.399-7.581,3.781c-1.367,0.776-2.691-0.603-4.131-1.026\r\n\tc-0.883,1.229-2.49,1.193-3.612,2.149c-2.816-2.362-5.209-0.515-7.65,0.778c-0.844-1.183-2.169-1.243-3.021-0.547\r\n\tc-1.399,1.144-2.736,0.768-4.105,0.391c-3.305-0.909-8.024-0.512-11.431-0.089c-4.46,0.554-8.897,3.014-13.567,0.466\r\n\tc-1.463-0.799-3.078,0.344-4.375,1.056c-0.85-0.495-1.261-1.27-2.264-1.15c-1.15,0.136-2.331-0.018-3.494,0.046\r\n\tc-1.043,0.057-1.391-1.352-2.594-1.049c-1.111,0.28-2.241,0.104-3.049-0.898c-0.695,0.735-1.469,1.58-2.388,0.432\r\n\tc-0.857-1.071-2.272,0.091-3.115-1.019c-0.583-0.768-1.884,1.156-2.445-0.465c-1.418,1.769-3.375,0.822-5.093,0.953\r\n\tc-1.822,0.139-3.981,0.636-5.417-0.119c-1.878-0.987-3.198,0.296-4.747,0.313c-1.509,0.017-2.263-1.29-3.565-1.185\r\n\tc-1.332,1.381-3.052,1.563-4.426,0.635c-1.61-1.089-3.452-0.974-4.711-0.479c-2.676,1.051-5.646,0.289-7.828,1.938\r\n\tc-0.683-0.542-1.055-0.839-1.688-1.342c-0.829,0.576-1.777,1.076-2.848,1.373c-3.517,0.977-7.056,1.02-10.609,0.846\r\n\tc-1.409-0.068-2.471,0.435-3.549,1.069c-1.926-0.894-3.757-0.987-5.342-1.232c-2.083-0.321-4.088-1.155-6.135-1.772\r\n\tc-0.341,0.311-0.696,0.633-1.05,0.955c-0.949-0.949-1.892-1.892-2.967-2.968c-0.514,0-1.163-0.001-1.811,0\r\n\tc-0.608,0.001-0.663-1.126-1.408-0.78c-0.296,0.296-0.532,0.532-0.768,0.768c-2.003-1.778-2.003-1.778-4.481-2.451\r\n\tc-0.039-0.618,0.13-1.346-0.79-1.529c-3.206,1.594-6.601,0.994-9.968,0.765c-0.931-1.668-1.427,0.507-2.274,0.259\r\n\tc-1.041-0.306-1.756-1.276-3.085-1.105c-1.035,0.133-1.745,0.709-2.603,0.992c-1.053,0.346-2.321,0.197-3.468,0.05\r\n\tc-1.123-0.144-1.734,0.768-2.601,0.985c-2.311,0.58-4.655,1.614-7.058,0.991c-1.986-0.515-3.309,1.3-5.096,1.04\r\n\tc-1.716-0.248-2.819-2.006-4.672-1.988c-0.48,0.006-1.005,0.111-1.326-0.419c0.217-1.201-0.782-1.697-1.415-2.407\r\n\tc-1.292-0.588-2.923,0.468-4.132-1c-0.348-0.423-1.842-0.491-2.335-0.108c-2.484,1.927-5.761-0.025-8.259,1.882\r\n\tc-0.759,0.579-1.799-0.181-2.503-0.876c-4.245,1.979-5.566,2.092-10.38,2.008c-1.64-0.028-3.296,0.806-4.912,1.238\r\n\tc-0.235,0.615,0.028,1.39-1.033,1.775c-1.321-0.673-2.828-1.439-4.226-2.15c-0.913,0.293-1.238,1.397-2.357,1.017\r\n\tc-0.283-0.255-0.646-0.579-1.189-1.069c-0.287,1.471-1.421,1.18-2.375,1.095c-2.043-0.183-3.799-1.27-5.693-1.917\r\n\tc-2.101-0.717-4.565,0.853-6.657-0.875c-0.408-0.337-1.498,0.116-1.865-0.229c-2.137-2.005-4.153-0.596-6.215,0.222\r\n\tc-0.931-1.526-2.305-1.788-3.374-0.746c-1.943,1.897-3.276-0.342-4.864-0.531c-1.855-0.221-3.326,2.316-4.94,0.811\r\n\tc-1.349-1.258-2.909-0.114-4.57-1.309c-0.179-0.207-0.711-0.823-1.21-1.402c-0.616,0.412-0.896,1.157-1.866,0.963\r\n\tc-2.224-2.004-5.235-3.755-8.021-2.738c-2.296,0.838-3.802,0.482-5.77-0.179c-2.098-0.704-4.248-1.223-6.57-1.123\r\n\tc-2.024,0.087-4.011,0.092-6.159-0.72c-2.105-0.795-4.683-0.251-6.682-2.073c-0.509-0.463-1.934-0.53-2.637,0.516\r\n\tc-0.365,0.543-0.893,0.287-1.114,0.319c-1.406-0.75-2.636-1.405-3.804-2.028c-2.504,1.352-4.994,2.255-7.78,2.065\r\n\tc-1.37-0.094-2.727-0.035-3.96,0.694c-1.209-1.401-2.82-0.387-4.208-0.702c-3.62-0.819-6.958,1.528-11.579,0.768\r\n\tc-0.032-0.08-0.401-0.995-0.917-2.273c-1.01,2.458-2.813,2.302-4.293,2.836c-2.534,0.914-5.234,0.974-7.805,1.67\r\n\tc-3.218-1.734-6.673-0.716-9.859-1.035c-1.111,1.111-2.053,2.054-3.036,3.037c-2.809,0.018-5.796-0.494-8.012,1.982\r\n\tc-0.656-0.656-1.245-1.245-2.011-2.011c-3.176,0.305-6.626-0.709-9.844,1.024c-2.124-1.083-2.086-0.977-3.818-0.358\r\n\tc-1.165,0.416-2.049,1.458-3.438,1.375c-2.79-0.167-5.621,0.335-8.363-0.534c-0.075,0.488,0.207,1.044-0.828,1.633\r\n\tc-2.107-1.286-4.136,1.014-6.53,0.899c-1.032-0.532-1.426-1.861-2.992-2.075c-1.815,1.799-4.035,1.946-6.656,1.126\r\n\tc-3.284-1.028-6.238,2.367-9.666,1.103c-1.319,1.573-3.447,0.094-4.576,0.938c-1.846,1.38-3.191-0.94-4.748-0.105\r\n\tc-1.646-1.447-3.679-0.854-5.396-1.017c-2.018-1.521-3.892-2.889-5.871-1.552c-0.93,0.408-0.84-0.752-1.598-0.083\r\n\tc-0.175,0.18-0.407,0.417-0.643,0.659c-0.566-0.59-1.054-1.341-2.827-0.624c-0.076,0.131-0.547,0.951-1.02,1.77\r\n\tc0-0.371-0.001-0.741-0.001-1.112c-5.352,0.475-9.849-1.026-13.06-4.952c-2.449,0.903-2.449,0.903-4.533-0.089\r\n\tc-2.724,1.548-5.446,1.525-8.169,0.001c-1.368,0.71-2.736,1.42-3.397,1.763c-3.532-0.728-6.427-1.307-8.771-2.919\r\n\tc-0.741,0.571-1.028,1.297-1.82,1.158c-1.388-0.72-2.756-1.43-3.868-2.007c-3.021,1.753-5.96,0.652-8.615,1.049\r\n\tc-0.797-0.871-1.356-1.482-2.097-2.291c-1.741,1.015-3.215-0.443-4.653-0.828c-0.575,0.466-0.91,0.737-1.235,1.001\r\n\tc-0.673-0.673-1.262-1.263-1.872-1.872c-2.219,2.337-4.406,0.048-6.982-0.156c-2.32,3.421-6.463,3.874-10.109,4.943\r\n\tc-2.834,0.832-6.127-0.284-9.045,1.139c-0.256,0.125-0.796,0.116-0.944-0.055c-1.258-1.452-3.393-0.696-4.481-2.077\r\n\tc-0.706,0.45-1.174,0.75-1.612,1.028c-0.348-0.348-0.583-0.583-0.843-0.843c-0.689,0.644-1.378,1.288-2.452,2.29\r\n\tc-0.484-0.839-0.958-1.658-1.373-2.377c-1.433,0.871-1.534,2.105-2.202,2.649c-3.546,2.57-7.799,0.318-11.329,1.861\r\n\tc-4.142,1.811-7.867-1.129-11.987-0.347c-0.829,2.764-4.707,1.139-5.532,3.898c-1.179,0-2.176,0-3.211,0\r\n\tc-1.179,1.822-3.615,2.105-4.897,3.997c-1.657-0.287-3.448,0.627-5.084-0.896c-0.539-0.502-2.363-0.525-2.833-0.034\r\n\tc-1.654,1.725-3.939,0.716-5.85,1.736c-1.677,0.895-4.209,0.187-6.288,0.187c-1.525-1.737-3.758-1.651-5.562-2.533\r\n\tc-1.992-0.974-4.315-0.342-6.438-1.366c-1.779-0.858-4.248,0.826-6.021-1.063c-0.493,0.387-0.786,1.106-2.217,0.851\r\n\tc-0.233-0.399-0.736-1.259-0.868-1.485c-2.381-0.849-4.2,0.149-5.89-1.215c-0.813-0.657-2.962-0.701-3.794-0.075\r\n\tc-1.715,1.29-3.445,0.783-5.17,0.861c-2.328,0.105-4.664,0.026-6.997,0.025c-1.719,1.708-3.815,2.123-6.171,2.029\r\n\tc-2.98-0.118-5.97-0.028-8.855-0.028c-0.689,0.688-1.278,1.278-1.867,1.867c-0.498-0.308-0.996-0.616-1.897-1.175\r\n\tc-0.388,2.401-2.434,0.696-3.564,1.615c-0.293,0.569,0.012,1.362-0.338,1.51c-3.463,0.326-6.337,0.991-8.169,2.808\r\n\tc-4.955,1.452-9.135-1.267-13.568-0.623c-4.48,0.649-8.601-1.6-12.961-1.979c0,2.838,0,5.29,0,7.976c341.006,0,681.882,0,1022.758,0\r\n\tc14.494,0,28.988-0.069,43.481-0.015c3.862,0.015,5.46-0.053,5.55-0.188c283.215,0,565.436,0,847.625,0c0-6.655,0-13.224,0-19.867\r\n\tC1915.898,10.076,1910.912,9.958,1906.688,12.029z\"\r\n            ></path>\r\n          </svg>\r\n        </div>\r\n        <div className=\"foodContainer\">\r\n          <h1\r\n            className=\"kodeMonoFont\"\r\n            style={{\r\n              textAlign: \"center\",\r\n              marginTop: \"20px\",\r\n              backgroundColor: \"#003\",\r\n              color: \"#fff\",\r\n              borderRadius: \"50px\",\r\n              padding: \"20px 0\",\r\n            }}\r\n          >\r\n            TOP THINGS TO EAT IN <br /> PORTO\r\n          </h1>\r\n        </div>\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            position: \"absolute\",\r\n            bottom: \"0\",\r\n            left: \"0\",\r\n          }}\r\n        >\r\n          <svg\r\n            class=\"torn-paper-effect\"\r\n            preserveAspectRatio=\"none\"\r\n            width=\"100%\"\r\n            height=\"20px\"\r\n            viewBox=\"0 0 1920 27\"\r\n            enable-background=\"new 0 0 1920 27\"\r\n            style={{ transform: \"rotateX(180deg)\" }}\r\n          >\r\n            <path\r\n              style={{ fill: \"#003\" }}\r\n              d=\"M1906.688,12.029c-1.653-1.78-3.943-0.347-5.823-0.883c-0.623,0.442-0.879,1.208-1.873,1.044 c-1.992-1.974-5.01-1.6-7.448-2.713c-0.417,0.074-0.441,0.997-1.238,0.33c-0.103-0.113-0.323-0.356-1.033-1.142 c-0.492,0.938-0.948,1.805-1.409,2.683c-2.1-2.389-5.174,0.159-7.012-2.03c-0.991,1.465-3.179,0.306-4.117,1.874\r\n\tc-0.5-0.379-0.778-1.019-1.599-0.989c-3.682,0.135-6.783,2.202-10.129,2.986c-2.646-2.246-6.298,0.391-8.975-2.322\r\n\tc-1.84,3.085-5.408-0.125-7.492,2.352c-2.784-1.202-5.6-0.211-7.657,1.15c-2.544,1.684-5.658-0.525-7.617,2.049\r\n\tc-0.711-0.49-1.225-0.845-1.762-1.215c-1.235,0.125-2.3,1.9-3.511,0.95c-1.499-1.176-3.069-1.008-4.633-0.888\r\n\tc-1.598,0.122-2.832-0.717-3.89-1.47c-1.507-1.073-2.629-2.676-4.531-0.757c-2.571-1.628-5.022,1.022-7.607,0.219\r\n\tc-0.723-0.225-1.504-0.072-2.258,0.563c-1.085,0.914-2.433,0.347-4.001,0.191c-0.359-0.553-0.792-1.217-1.557-2.392\r\n\tc-0.742,1.224-1.258,2.076-1.313,2.166c-2.294,1.216-3.012-0.829-4.299-0.584c-2.297,1.75-4.521,1.209-6.864-0.046\r\n\tc-0.324,0.259-0.688,0.799-1.059,0.804c-4.448,0.06-8.899,0.038-13.98,0.038c-0.24-0.405-0.749-1.262-1.173-1.976\r\n\tc-2.149,1.008-3.842,2.035-5.738,0.538c-1.279-1.01-3.3,0.474-4.443-1.4c-0.961-1.577-3.543-0.592-4.438-2.496\r\n\tc-3.05-0.142-5.799-2.602-9.159-0.84c-1.687,0.884-4.072,1.045-5.593-0.089c-1.931-1.44-2.974,0.217-4.092,0.435\r\n\tc-1.995-0.727-3.73-1.358-5.471-1.992c-1.57,1.758-3.127,1.162-4.602-0.068c-1.607,1.257-3.317,1.732-4.943,0.605\r\n\tc-0.969-0.671-1.885-0.5-2.809-0.466c-3.405,0.126-6.516-1.034-9.699-2.036c-0.351,0.323-0.711,0.655-1.266,1.166\r\n\tc-0.591-0.759-1.198-1.538-1.725-2.212c-2.557,0-4.875,0-8.18,0c-0.132-0.319-0.531-1.282-0.687-1.656\r\n\tc-1.575-0.655-1.718,0.829-2.71,0.698c-0.934,0.347-1.032-1.229-2.004-0.986c-0.555-0.477-1.205-0.576-1.831-0.262\r\n\tc-4.749,2.376-9.568,1.722-14.54,0.734c-3.522-0.699-7.345-0.937-10.771-0.021c-8.529,2.281-14.354-0.386-22.609-1.185\r\n\tc-0.667,0-3.228,0.765-3.895,0.765c-0.269,1.448-2.103,0.853-2.87,2.04c-2.285-0.507-4.856,0.825-6.996-1.004\r\n\tc-0.521,0.312-0.772,1.039-1.604,0.942c-2.775-0.322-5.41,0.34-7.854,1.536c-1.457,0.712-3.183,0.871-4.261,0.345\r\n\tc-3.696-1.805-7.167-0.856-10.271,0.122c-1.912-0.04-2.112-2.065-3.931-2.006c-1.694-0.765-1.941,1.694-3.332,1.995\r\n\tc-1.699,0-3.39,0.18-5.024-0.049c-1.732-0.243-2.798,1.396-4.604,1.124c-2.718-0.409-5.469-0.152-7.379,2.128\r\n\tc-2.17-1.577-4.005,0.289-5.965-0.134c-2.103-0.454-4.128,0.208-5.64,1.813c-3.357,0.918-6.184-1.798-9.276-0.846\r\n\tc-0.445-0.925-0.152-1.714-0.918-2.031c-0.971-0.401-1.309,0.68-2.029,0.883c-0.604-1.118-1.666-0.873-2.634-0.885\r\n\tc-1.143-0.013-2.285-0.003-3.268-0.003c-1.106-1.114-2.044-2.06-2.726-2.746c-1.358-0.58-2.729,0.321-3.578-0.645\r\n\tc-1.388-1.575-3.174,0.984-4.441-0.609c-4.224,1.665-8.423,1.515-12.691,0.062c-0.804-0.273-1.865-0.181-2.867,0.204\r\n\tc-3.121,1.199-6.329,2.133-10.131,1.631c-0.475,0.7-1.028,1.521-1.345,1.989c-2.119,0.122-3.817-0.032-5.385,0.352\r\n\tc-9.312,2.279-14.828,3.395-21.018,2.769c-0.495-0.05-1.111-0.196-1.481,0.024c-2.459,1.461-5.34,1.699-7.979,2.411\r\n\tc-2.833,0.764-5.061,2.335-7.593,3.466c-0.969,0.433-1.489,1.215-2.317,1.644c-3.614,1.874-8.017,1.064-11.524,3.343\r\n\tc-3.526-2.029-7.422-0.189-11.06-1.061c-0.589-0.589-1.179-1.178-1.834-1.834c-3.257,0-6.584-0.095-9.903,0.026\r\n\tc-3.349,0.123-5.717-2.383-8.814-3.184c-0.867,0.785-1.689,1.528-2.857,2.584c-0.712-1.586-2.597-1.038-3.396-2.375\r\n\tc-4.875-0.261-9.631-0.244-13.903,2.711c-0.939,0.65-2.543,0.629-3.646-0.316c-1.049-0.897-2.626-0.786-3.243-0.338\r\n\tc-1.525,1.113-3.112,1.029-4.655,0.83c-1.742-0.225-3.054,1.255-4.583,1.003c-2.853-0.469-5.448,0.766-8.049,1.29\r\n\tc-1.847,0.371-3.941,0.443-5.849,1.488c-2.252,1.235-4.988,2.07-7.542,2.143c-2.824,0.081-5.771,1.03-8.669-0.719\r\n\tc-1.008-0.608-3.135-0.79-4.648,0.541c-0.876,0.771-2.188,0.289-3.313,0.232c-0.589-0.591-1.179-1.181-1.768-1.771\r\n\tc-1.306-0.537-3.041,0.573-4.061-1.059c-3.901-0.564-7.618-2.124-11.633-2.111c-1.087,0.004-2.119,0.145-3.253-0.631\r\n\tc-1.381-0.944-2.94-0.271-4.455,0.588c-1.642,0.931-3.068-1.93-4.954-0.711c-0.273,0.178-0.443,0.617-0.717,0.676\r\n\tc-2.816,0.599-5.678,1.731-8.461,1.572c-4.614-0.264-9.223-1.017-13.843-1.456c-5.847-0.556-11.815,1.072-17.592-0.986\r\n\tc-0.592-0.211-1.58-0.312-1.946,0.02c-1.806,1.633-4.211,1.089-6.27,1.794c-2.087,0.716-4.611,0.158-6.944,0.158\r\n\tc-1.503-0.432-2.372-2.113-4.172-2.019c-1.662,0.087-3.478-0.396-4.961,0.126c-1.763,0.62-3.121-2.656-4.758-0.227\r\n\tc-1.436-2.093-2.76,0.089-4.118,0.178c-5.541,0.364-10.891-0.694-16.074-2.332c-1.263-0.398-2.465-0.812-3.678-0.678\r\n\tc-2.656,0.294-5.127-0.484-7.456-1.379c-2.272-0.874-4.205-0.792-6.463-0.06c-7.844,2.541-6.753,3.244-15.267,0.626\r\n\tc-3.086-0.949-5.96-2.991-9.862-2.097c-0.385-0.789-0.739-1.516-1.019-2.087c-2.055,1.425-3.956,1.311-5.706,0.346\r\n\tc-1.307-0.72-2.924-0.75-3.775-0.278c-2.287,1.266-4.743,0.539-6.987,1.041c-0.512,2.917-2.846,3.626-4.926,3.726\r\n\tc-2.612,0.124-5.023,0.659-7.318,1.736c-0.653,0.306-1.226,0.383-1.847,0.363c-2.501-0.082-4.068,1.571-5.756,3.013\r\n\tc-2.233,0.087-4.569-0.512-6.791,1.418c-0.471-1.835-1.769-1.304-2.878-1.432c-1.256-0.146-2.88,0.903-3.375,0.583\r\n\tc-1.313-0.849-2.553-0.435-3.8-0.543c-1.323-0.114-2.667-0.082-3.997-0.014c-3.085,0.157-5.937-1.626-9.063-1.063\r\n\tc-1.444-1.706-3.651-1.35-5.054-0.812c-3.057,1.172-6.092,0.68-9.137,0.865c-0.644,0.039-1.326-0.01-1.922,0.189\r\n\tc-3.33,1.112-6.717,1.99-10.247,1.782c-4.751-0.28-9.317,1.747-14.083,1.016c-0.645-0.099-0.807,0.622-1.214,0.686\r\n\tc-2.856,0.444-5.156,2.096-8.292,3.524c-2.365-0.867-6.328-2.242-7.198-2.998c-2.773-1.573-5.327,2.088-8.085,0.087\r\n\tc-2.148,1.771-5.14-0.317-7.36,1.629c-0.443,0.388-1.774,0.116-2.783-0.26c-3.272-1.218-6.678-0.943-10.029-0.181\r\n\tc-1.969,0.448-3.911,1.011-5.864,1.521c-2.057-2.154-4.113-0.146-6.17,0c-3.287-1.954-6.9-2.259-10.441-1.98\r\n\tc-1.35-1.258-2.661-1.43-4.34-1.475c-1.521-0.041-3.323-1.036-4.664-1.791c-1.818-1.022-3.526-0.294-5.167-0.868\r\n\tc-0.98-1.14-2.457-1.3-3.7-1.961c-0.413,0.362-0.778,0.682-1.144,1.002c-0.575-0.178-0.733-1.094-2.059-0.819\r\n\tc-2.482,2.394-6.367,2.596-10.038,3.972c-0.554-0.703-1.166-1.48-1.646-2.09c-1.979,0-4.188,0.655-5.173-0.163\r\n\tc-1.275-1.062-3.067-0.118-3.902-1.604c-1.041,0.813-2.247,0.834-3.494,0.791c-1.498-0.051-2.998-0.007-4.497-0.014\r\n\tc-0.628-0.003-0.699,1.07-1.693,0.694c-0.168-0.025-0.191-0.975-0.831-0.406c-0.595,0.832,0.337,2.039-1.103,2.948\r\n\tc-4.826-1.897-10.075-3.35-15.699-3.981c-1.394,1.522-3.377,0.406-5.231,0.826c-0.671-0.881-1.173-1.539-1.694-2.225\r\n\tc-3.583,1.016-6.671-1.573-10.036-0.792c-0.321-0.779-0.555-1.348-0.792-1.918c-0.626-0.23-1.209-0.299-1.579,0.402\r\n\tc0.392,0.502,1.087,0.815,0.885,1.839c-0.179,0.216-0.486,0.574-0.78,0.944c-1.035,1.3-2.845,0.007-3.629,0.784\r\n\tc-1.345,1.334-2.823,0.95-4.168,0.8c-1.271-0.141-2.348,1.22-3.343,0.52c-1.493-1.049-2.836,0.617-3.76,0.188\r\n\tc-3.873-1.803-7.05,0.221-10.776,1.511c-0.034-1.703-1.615-1.113-2.562-1.535c-1.959-0.873-4.205-1.103-6.333-1.597\r\n\tc-2.651,2.137-5.744,0.481-8.584,0.997c-1.03,0.187-1.323-1.671-2.58-0.931c-0.573,0.574-1.162,1.163-1.979,1.98\r\n\tc-3.573-0.473-7.454,0.813-11.184-0.814c-0.588,0.588-1.178,1.177-1.856,1.855c-0.747-1.711-2.58-1.477-3.434-0.98\r\n\tc-2.351,1.366-4.772,0.632-7.144,0.905c-2.861,0.331-5.878-0.878-8.616,0.939c-0.418,0.277-1.558,0.173-1.839-0.177\r\n\tc-0.937-1.166-2.153-0.861-3.209-0.732c-2.721,0.335-4.974-0.697-7.014-2.082c-1.225,0.262-2.051,0.971-3.23,1.146\r\n\tc-1.83,0.272-3.478-1.175-5.255-0.274c-1.221-1.703-3.44-0.036-4.774-1.426c-0.81-0.844-1.946-0.515-2.812-0.338\r\n\tc-1.199,0.245-2.174,1.308-3.604,0.95c-1.085-0.271-2.321,0.4-3.334-0.396c-0.89-0.699-1.901,0.168-2.997-0.49\r\n\tc-0.985-0.593-2.724-0.445-3.89,0.755c-0.626-0.689-1.18-1.299-1.712-1.886c-0.417,0.359-0.834,0.993-1.151,0.946\r\n\tc-2.219-0.328-4.478,0.692-6.735-0.643c-1.276-0.755-3.208-0.837-4.623,0.225c-0.953,0.714-1.799,0.449-2.726,0.279\r\n\tc-0.216-0.592-0.427-1.169-0.691-1.895c-2.699,0.559-5.569-0.833-8.078,0.906c-2.688-2.219-6.326,0.428-9.251-1.695\r\n\tc-1.083-0.785-3.216-0.127-4.599-0.127c-1.52,1.064-2.737,2.025-4.478,2.028c-1.248,0.001-2.699-0.55-3.62,0.888\r\n\tc-1.256-1.885-2.411-0.326-3.646,0.052c-0.609,0.187-1.425,0.252-1.974-0.003c-4.376-2.026-9.253-1.71-13.748-3.037\r\n\tc-2.021-0.598-3.899-1.248-5.899-0.768c-2.022,2.468-5.151,2.399-7.581,3.781c-1.367,0.776-2.691-0.603-4.131-1.026\r\n\tc-0.883,1.229-2.49,1.193-3.612,2.149c-2.816-2.362-5.209-0.515-7.65,0.778c-0.844-1.183-2.169-1.243-3.021-0.547\r\n\tc-1.399,1.144-2.736,0.768-4.105,0.391c-3.305-0.909-8.024-0.512-11.431-0.089c-4.46,0.554-8.897,3.014-13.567,0.466\r\n\tc-1.463-0.799-3.078,0.344-4.375,1.056c-0.85-0.495-1.261-1.27-2.264-1.15c-1.15,0.136-2.331-0.018-3.494,0.046\r\n\tc-1.043,0.057-1.391-1.352-2.594-1.049c-1.111,0.28-2.241,0.104-3.049-0.898c-0.695,0.735-1.469,1.58-2.388,0.432\r\n\tc-0.857-1.071-2.272,0.091-3.115-1.019c-0.583-0.768-1.884,1.156-2.445-0.465c-1.418,1.769-3.375,0.822-5.093,0.953\r\n\tc-1.822,0.139-3.981,0.636-5.417-0.119c-1.878-0.987-3.198,0.296-4.747,0.313c-1.509,0.017-2.263-1.29-3.565-1.185\r\n\tc-1.332,1.381-3.052,1.563-4.426,0.635c-1.61-1.089-3.452-0.974-4.711-0.479c-2.676,1.051-5.646,0.289-7.828,1.938\r\n\tc-0.683-0.542-1.055-0.839-1.688-1.342c-0.829,0.576-1.777,1.076-2.848,1.373c-3.517,0.977-7.056,1.02-10.609,0.846\r\n\tc-1.409-0.068-2.471,0.435-3.549,1.069c-1.926-0.894-3.757-0.987-5.342-1.232c-2.083-0.321-4.088-1.155-6.135-1.772\r\n\tc-0.341,0.311-0.696,0.633-1.05,0.955c-0.949-0.949-1.892-1.892-2.967-2.968c-0.514,0-1.163-0.001-1.811,0\r\n\tc-0.608,0.001-0.663-1.126-1.408-0.78c-0.296,0.296-0.532,0.532-0.768,0.768c-2.003-1.778-2.003-1.778-4.481-2.451\r\n\tc-0.039-0.618,0.13-1.346-0.79-1.529c-3.206,1.594-6.601,0.994-9.968,0.765c-0.931-1.668-1.427,0.507-2.274,0.259\r\n\tc-1.041-0.306-1.756-1.276-3.085-1.105c-1.035,0.133-1.745,0.709-2.603,0.992c-1.053,0.346-2.321,0.197-3.468,0.05\r\n\tc-1.123-0.144-1.734,0.768-2.601,0.985c-2.311,0.58-4.655,1.614-7.058,0.991c-1.986-0.515-3.309,1.3-5.096,1.04\r\n\tc-1.716-0.248-2.819-2.006-4.672-1.988c-0.48,0.006-1.005,0.111-1.326-0.419c0.217-1.201-0.782-1.697-1.415-2.407\r\n\tc-1.292-0.588-2.923,0.468-4.132-1c-0.348-0.423-1.842-0.491-2.335-0.108c-2.484,1.927-5.761-0.025-8.259,1.882\r\n\tc-0.759,0.579-1.799-0.181-2.503-0.876c-4.245,1.979-5.566,2.092-10.38,2.008c-1.64-0.028-3.296,0.806-4.912,1.238\r\n\tc-0.235,0.615,0.028,1.39-1.033,1.775c-1.321-0.673-2.828-1.439-4.226-2.15c-0.913,0.293-1.238,1.397-2.357,1.017\r\n\tc-0.283-0.255-0.646-0.579-1.189-1.069c-0.287,1.471-1.421,1.18-2.375,1.095c-2.043-0.183-3.799-1.27-5.693-1.917\r\n\tc-2.101-0.717-4.565,0.853-6.657-0.875c-0.408-0.337-1.498,0.116-1.865-0.229c-2.137-2.005-4.153-0.596-6.215,0.222\r\n\tc-0.931-1.526-2.305-1.788-3.374-0.746c-1.943,1.897-3.276-0.342-4.864-0.531c-1.855-0.221-3.326,2.316-4.94,0.811\r\n\tc-1.349-1.258-2.909-0.114-4.57-1.309c-0.179-0.207-0.711-0.823-1.21-1.402c-0.616,0.412-0.896,1.157-1.866,0.963\r\n\tc-2.224-2.004-5.235-3.755-8.021-2.738c-2.296,0.838-3.802,0.482-5.77-0.179c-2.098-0.704-4.248-1.223-6.57-1.123\r\n\tc-2.024,0.087-4.011,0.092-6.159-0.72c-2.105-0.795-4.683-0.251-6.682-2.073c-0.509-0.463-1.934-0.53-2.637,0.516\r\n\tc-0.365,0.543-0.893,0.287-1.114,0.319c-1.406-0.75-2.636-1.405-3.804-2.028c-2.504,1.352-4.994,2.255-7.78,2.065\r\n\tc-1.37-0.094-2.727-0.035-3.96,0.694c-1.209-1.401-2.82-0.387-4.208-0.702c-3.62-0.819-6.958,1.528-11.579,0.768\r\n\tc-0.032-0.08-0.401-0.995-0.917-2.273c-1.01,2.458-2.813,2.302-4.293,2.836c-2.534,0.914-5.234,0.974-7.805,1.67\r\n\tc-3.218-1.734-6.673-0.716-9.859-1.035c-1.111,1.111-2.053,2.054-3.036,3.037c-2.809,0.018-5.796-0.494-8.012,1.982\r\n\tc-0.656-0.656-1.245-1.245-2.011-2.011c-3.176,0.305-6.626-0.709-9.844,1.024c-2.124-1.083-2.086-0.977-3.818-0.358\r\n\tc-1.165,0.416-2.049,1.458-3.438,1.375c-2.79-0.167-5.621,0.335-8.363-0.534c-0.075,0.488,0.207,1.044-0.828,1.633\r\n\tc-2.107-1.286-4.136,1.014-6.53,0.899c-1.032-0.532-1.426-1.861-2.992-2.075c-1.815,1.799-4.035,1.946-6.656,1.126\r\n\tc-3.284-1.028-6.238,2.367-9.666,1.103c-1.319,1.573-3.447,0.094-4.576,0.938c-1.846,1.38-3.191-0.94-4.748-0.105\r\n\tc-1.646-1.447-3.679-0.854-5.396-1.017c-2.018-1.521-3.892-2.889-5.871-1.552c-0.93,0.408-0.84-0.752-1.598-0.083\r\n\tc-0.175,0.18-0.407,0.417-0.643,0.659c-0.566-0.59-1.054-1.341-2.827-0.624c-0.076,0.131-0.547,0.951-1.02,1.77\r\n\tc0-0.371-0.001-0.741-0.001-1.112c-5.352,0.475-9.849-1.026-13.06-4.952c-2.449,0.903-2.449,0.903-4.533-0.089\r\n\tc-2.724,1.548-5.446,1.525-8.169,0.001c-1.368,0.71-2.736,1.42-3.397,1.763c-3.532-0.728-6.427-1.307-8.771-2.919\r\n\tc-0.741,0.571-1.028,1.297-1.82,1.158c-1.388-0.72-2.756-1.43-3.868-2.007c-3.021,1.753-5.96,0.652-8.615,1.049\r\n\tc-0.797-0.871-1.356-1.482-2.097-2.291c-1.741,1.015-3.215-0.443-4.653-0.828c-0.575,0.466-0.91,0.737-1.235,1.001\r\n\tc-0.673-0.673-1.262-1.263-1.872-1.872c-2.219,2.337-4.406,0.048-6.982-0.156c-2.32,3.421-6.463,3.874-10.109,4.943\r\n\tc-2.834,0.832-6.127-0.284-9.045,1.139c-0.256,0.125-0.796,0.116-0.944-0.055c-1.258-1.452-3.393-0.696-4.481-2.077\r\n\tc-0.706,0.45-1.174,0.75-1.612,1.028c-0.348-0.348-0.583-0.583-0.843-0.843c-0.689,0.644-1.378,1.288-2.452,2.29\r\n\tc-0.484-0.839-0.958-1.658-1.373-2.377c-1.433,0.871-1.534,2.105-2.202,2.649c-3.546,2.57-7.799,0.318-11.329,1.861\r\n\tc-4.142,1.811-7.867-1.129-11.987-0.347c-0.829,2.764-4.707,1.139-5.532,3.898c-1.179,0-2.176,0-3.211,0\r\n\tc-1.179,1.822-3.615,2.105-4.897,3.997c-1.657-0.287-3.448,0.627-5.084-0.896c-0.539-0.502-2.363-0.525-2.833-0.034\r\n\tc-1.654,1.725-3.939,0.716-5.85,1.736c-1.677,0.895-4.209,0.187-6.288,0.187c-1.525-1.737-3.758-1.651-5.562-2.533\r\n\tc-1.992-0.974-4.315-0.342-6.438-1.366c-1.779-0.858-4.248,0.826-6.021-1.063c-0.493,0.387-0.786,1.106-2.217,0.851\r\n\tc-0.233-0.399-0.736-1.259-0.868-1.485c-2.381-0.849-4.2,0.149-5.89-1.215c-0.813-0.657-2.962-0.701-3.794-0.075\r\n\tc-1.715,1.29-3.445,0.783-5.17,0.861c-2.328,0.105-4.664,0.026-6.997,0.025c-1.719,1.708-3.815,2.123-6.171,2.029\r\n\tc-2.98-0.118-5.97-0.028-8.855-0.028c-0.689,0.688-1.278,1.278-1.867,1.867c-0.498-0.308-0.996-0.616-1.897-1.175\r\n\tc-0.388,2.401-2.434,0.696-3.564,1.615c-0.293,0.569,0.012,1.362-0.338,1.51c-3.463,0.326-6.337,0.991-8.169,2.808\r\n\tc-4.955,1.452-9.135-1.267-13.568-0.623c-4.48,0.649-8.601-1.6-12.961-1.979c0,2.838,0,5.29,0,7.976c341.006,0,681.882,0,1022.758,0\r\n\tc14.494,0,28.988-0.069,43.481-0.015c3.862,0.015,5.46-0.053,5.55-0.188c283.215,0,565.436,0,847.625,0c0-6.655,0-13.224,0-19.867\r\n\tC1915.898,10.076,1910.912,9.958,1906.688,12.029z\"\r\n            ></path>\r\n          </svg>\r\n        </div>\r\n      </Container>\r\n      <Container\r\n        style={{\r\n          marginTop: \"50px\",\r\n        }}\r\n      >\r\n        <h1\r\n          style={{\r\n            marginBottom: \"50px\",\r\n            textAlign: \"center\",\r\n          }}\r\n          className=\"kodeMonoFont\"\r\n        >\r\n          Francesinha sandwich\r\n        </h1>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <div>\r\n            <p style={{ width: \"100%\" }} className=\"kodeMonoFont\">\r\n              Francesinha ( meaning little French woman ) is a Portuguese\r\n              sandwich, originally from Porto , made with layers of toasted\r\n              bread and assorted hot meats such as roast , steak ,wet-cured ham\r\n              , linguica or chipolata over which sliced cheese is melted by the\r\n              ladling of a near-boiling tomato-and-beer sauce called molho de\r\n              francesinha ( typically served with French fries )\r\n            </p>\r\n          </div>\r\n          <img style={{ width: \"60%\" }} src={sandwich} alt=\"Error\" />\r\n        </div>\r\n      </Container>\r\n      <Container\r\n        style={{\r\n          marginTop: \"50px\",\r\n        }}\r\n      >\r\n        <h1\r\n          style={{\r\n            marginBottom: \"50px\",\r\n            textAlign: \"center\",\r\n          }}\r\n          className=\"kodeMonoFont\"\r\n        >\r\n          Bolinhos de Bacalhau\r\n        </h1>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <img\r\n            style={{ width: \"60%\", transform: \"rotateY(180deg)\" }}\r\n            src={breadcrumbles}\r\n            alt=\"Error\"\r\n          />\r\n          <div>\r\n            <p style={{ width: \"100%\" }} className=\"kodeMonoFont\">\r\n              Food in Portugal is undeniably tasty, including bolinhos de\r\n              bacalhau—or Portuguese codfish balls—a well-seasoned sphere of\r\n              potato and codfish, coated in golden breadcrumbs.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n      <Container\r\n        style={{\r\n          marginTop: \"50px\",\r\n        }}\r\n      >\r\n        <h1\r\n          style={{\r\n            marginBottom: \"50px\",\r\n            textAlign: \"center\",\r\n          }}\r\n          className=\"kodeMonoFont\"\r\n        >\r\n          Aletria\r\n        </h1>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <div>\r\n            <p style={{ width: \"100%\" }} className=\"kodeMonoFont\">\r\n              Another traditional Portuguese dish, Aletria is a sweet dessert\r\n              made of fine, stringy pasta, with milk, egg yolks, sugar, lemon\r\n              rind, and cinnamon for a custardy, zesty finish. The dish is\r\n              usually topped with a criss-cross pattern of cinnamon powder.\r\n              Vermicelli noodles can also be used to make aletria, which is\r\n              typically eaten during the holidays in Portugal.\r\n            </p>\r\n          </div>\r\n          <img style={{ width: \"60%\" }} src={aletria} alt=\"Error\" />\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Food;\r\n","'use client';\n\nimport PropTypes from 'prop-types';\nimport createContainer from './createContainer';\n\n/**\n *\n * Demos:\n *\n * - [Container (Material UI)](https://mui.com/material-ui/react-container/)\n * - [Container (MUI System)](https://mui.com/system/react-container/)\n *\n * API:\n *\n * - [Container API](https://mui.com/system/api/container/)\n */\nconst Container = createContainer();\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"ownerState\"],\n  _excluded2 = [\"variants\"],\n  _excluded3 = [\"name\", \"slot\", \"skipVariantsResolver\", \"skipSx\", \"overridesResolver\"];\n/* eslint-disable no-underscore-dangle */\nimport styledEngineStyled, { internal_processStyles as processStyles } from '@mui/styled-engine';\nimport { isPlainObject } from '@mui/utils/deepmerge';\nimport capitalize from '@mui/utils/capitalize';\nimport getDisplayName from '@mui/utils/getDisplayName';\nimport createTheme from './createTheme';\nimport styleFunctionSx from './styleFunctionSx';\nfunction isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\n\n// https://github.com/emotion-js/emotion/blob/26ded6109fcd8ca9875cc2ce4564fee678a3f3c5/packages/styled/src/utils.js#L40\nfunction isStringTag(tag) {\n  return typeof tag === 'string' &&\n  // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96;\n}\n\n// Update /system/styled/#api in case if this changes\nexport function shouldForwardProp(prop) {\n  return prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as';\n}\nexport const systemDefaultTheme = createTheme();\nconst lowercaseFirstLetter = string => {\n  if (!string) {\n    return string;\n  }\n  return string.charAt(0).toLowerCase() + string.slice(1);\n};\nfunction resolveTheme({\n  defaultTheme,\n  theme,\n  themeId\n}) {\n  return isEmpty(theme) ? defaultTheme : theme[themeId] || theme;\n}\nfunction defaultOverridesResolver(slot) {\n  if (!slot) {\n    return null;\n  }\n  return (props, styles) => styles[slot];\n}\nfunction processStyleArg(callableStyle, _ref) {\n  let {\n      ownerState\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const resolvedStylesArg = typeof callableStyle === 'function' ? callableStyle(_extends({\n    ownerState\n  }, props)) : callableStyle;\n  if (Array.isArray(resolvedStylesArg)) {\n    return resolvedStylesArg.flatMap(resolvedStyle => processStyleArg(resolvedStyle, _extends({\n      ownerState\n    }, props)));\n  }\n  if (!!resolvedStylesArg && typeof resolvedStylesArg === 'object' && Array.isArray(resolvedStylesArg.variants)) {\n    const {\n        variants = []\n      } = resolvedStylesArg,\n      otherStyles = _objectWithoutPropertiesLoose(resolvedStylesArg, _excluded2);\n    let result = otherStyles;\n    variants.forEach(variant => {\n      let isMatch = true;\n      if (typeof variant.props === 'function') {\n        isMatch = variant.props(_extends({\n          ownerState\n        }, props, ownerState));\n      } else {\n        Object.keys(variant.props).forEach(key => {\n          if ((ownerState == null ? void 0 : ownerState[key]) !== variant.props[key] && props[key] !== variant.props[key]) {\n            isMatch = false;\n          }\n        });\n      }\n      if (isMatch) {\n        if (!Array.isArray(result)) {\n          result = [result];\n        }\n        result.push(typeof variant.style === 'function' ? variant.style(_extends({\n          ownerState\n        }, props, ownerState)) : variant.style);\n      }\n    });\n    return result;\n  }\n  return resolvedStylesArg;\n}\nexport default function createStyled(input = {}) {\n  const {\n    themeId,\n    defaultTheme = systemDefaultTheme,\n    rootShouldForwardProp = shouldForwardProp,\n    slotShouldForwardProp = shouldForwardProp\n  } = input;\n  const systemSx = props => {\n    return styleFunctionSx(_extends({}, props, {\n      theme: resolveTheme(_extends({}, props, {\n        defaultTheme,\n        themeId\n      }))\n    }));\n  };\n  systemSx.__mui_systemSx = true;\n  return (tag, inputOptions = {}) => {\n    // Filter out the `sx` style function from the previous styled component to prevent unnecessary styles generated by the composite components.\n    processStyles(tag, styles => styles.filter(style => !(style != null && style.__mui_systemSx)));\n    const {\n        name: componentName,\n        slot: componentSlot,\n        skipVariantsResolver: inputSkipVariantsResolver,\n        skipSx: inputSkipSx,\n        // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n        // For more details: https://github.com/mui/material-ui/pull/37908\n        overridesResolver = defaultOverridesResolver(lowercaseFirstLetter(componentSlot))\n      } = inputOptions,\n      options = _objectWithoutPropertiesLoose(inputOptions, _excluded3);\n\n    // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.\n    const skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver :\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    componentSlot && componentSlot !== 'Root' && componentSlot !== 'root' || false;\n    const skipSx = inputSkipSx || false;\n    let label;\n    if (process.env.NODE_ENV !== 'production') {\n      if (componentName) {\n        // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n        // For more details: https://github.com/mui/material-ui/pull/37908\n        label = `${componentName}-${lowercaseFirstLetter(componentSlot || 'Root')}`;\n      }\n    }\n    let shouldForwardPropOption = shouldForwardProp;\n\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    if (componentSlot === 'Root' || componentSlot === 'root') {\n      shouldForwardPropOption = rootShouldForwardProp;\n    } else if (componentSlot) {\n      // any other slot specified\n      shouldForwardPropOption = slotShouldForwardProp;\n    } else if (isStringTag(tag)) {\n      // for string (html) tag, preserve the behavior in emotion & styled-components.\n      shouldForwardPropOption = undefined;\n    }\n    const defaultStyledResolver = styledEngineStyled(tag, _extends({\n      shouldForwardProp: shouldForwardPropOption,\n      label\n    }, options));\n    const transformStyleArg = stylesArg => {\n      // On the server Emotion doesn't use React.forwardRef for creating components, so the created\n      // component stays as a function. This condition makes sure that we do not interpolate functions\n      // which are basically components used as a selectors.\n      if (typeof stylesArg === 'function' && stylesArg.__emotion_real !== stylesArg || isPlainObject(stylesArg)) {\n        return props => processStyleArg(stylesArg, _extends({}, props, {\n          theme: resolveTheme({\n            theme: props.theme,\n            defaultTheme,\n            themeId\n          })\n        }));\n      }\n      return stylesArg;\n    };\n    const muiStyledResolver = (styleArg, ...expressions) => {\n      let transformedStyleArg = transformStyleArg(styleArg);\n      const expressionsWithDefaultTheme = expressions ? expressions.map(transformStyleArg) : [];\n      if (componentName && overridesResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = resolveTheme(_extends({}, props, {\n            defaultTheme,\n            themeId\n          }));\n          if (!theme.components || !theme.components[componentName] || !theme.components[componentName].styleOverrides) {\n            return null;\n          }\n          const styleOverrides = theme.components[componentName].styleOverrides;\n          const resolvedStyleOverrides = {};\n          // TODO: v7 remove iteration and use `resolveStyleArg(styleOverrides[slot])` directly\n          Object.entries(styleOverrides).forEach(([slotKey, slotStyle]) => {\n            resolvedStyleOverrides[slotKey] = processStyleArg(slotStyle, _extends({}, props, {\n              theme\n            }));\n          });\n          return overridesResolver(props, resolvedStyleOverrides);\n        });\n      }\n      if (componentName && !skipVariantsResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          var _theme$components;\n          const theme = resolveTheme(_extends({}, props, {\n            defaultTheme,\n            themeId\n          }));\n          const themeVariants = theme == null || (_theme$components = theme.components) == null || (_theme$components = _theme$components[componentName]) == null ? void 0 : _theme$components.variants;\n          return processStyleArg({\n            variants: themeVariants\n          }, _extends({}, props, {\n            theme\n          }));\n        });\n      }\n      if (!skipSx) {\n        expressionsWithDefaultTheme.push(systemSx);\n      }\n      const numOfCustomFnsApplied = expressionsWithDefaultTheme.length - expressions.length;\n      if (Array.isArray(styleArg) && numOfCustomFnsApplied > 0) {\n        const placeholders = new Array(numOfCustomFnsApplied).fill('');\n        // If the type is array, than we need to add placeholders in the template for the overrides, variants and the sx styles.\n        transformedStyleArg = [...styleArg, ...placeholders];\n        transformedStyleArg.raw = [...styleArg.raw, ...placeholders];\n      }\n      const Component = defaultStyledResolver(transformedStyleArg, ...expressionsWithDefaultTheme);\n      if (process.env.NODE_ENV !== 'production') {\n        let displayName;\n        if (componentName) {\n          displayName = `${componentName}${capitalize(componentSlot || '')}`;\n        }\n        if (displayName === undefined) {\n          displayName = `Styled(${getDisplayName(tag)})`;\n        }\n        Component.displayName = displayName;\n      }\n      if (tag.muiName) {\n        Component.muiName = tag.muiName;\n      }\n      return Component;\n    };\n    if (defaultStyledResolver.withConfig) {\n      muiStyledResolver.withConfig = defaultStyledResolver.withConfig;\n    }\n    return muiStyledResolver;\n  };\n}","import createStyled from './createStyled';\nconst styled = createStyled();\nexport default styled;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '@mui/utils/capitalize';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}"],"names":["_jsxs","children","Container","style","position","marginTop","_jsx","width","top","left","class","preserveAspectRatio","height","viewBox","fill","d","className","textAlign","backgroundColor","color","borderRadius","padding","bottom","transform","marginBottom","display","justifyContent","alignItems","src","sandwich","alt","breadcrumbles","aletria","createContainer","_excluded","_excluded2","_excluded3","shouldForwardProp","prop","systemDefaultTheme","createTheme","lowercaseFirstLetter","string","charAt","toLowerCase","slice","resolveTheme","_ref2","defaultTheme","theme","themeId","obj","Object","keys","length","defaultOverridesResolver","slot","props","styles","processStyleArg","callableStyle","_ref","ownerState","_objectWithoutPropertiesLoose","resolvedStylesArg","_extends","Array","isArray","flatMap","resolvedStyle","variants","result","forEach","variant","isMatch","key","push","styled","input","arguments","undefined","rootShouldForwardProp","slotShouldForwardProp","systemSx","styleFunctionSx","__mui_systemSx","tag","inputOptions","processStyles","filter","name","componentName","componentSlot","skipVariantsResolver","inputSkipVariantsResolver","skipSx","inputSkipSx","overridesResolver","options","shouldForwardPropOption","charCodeAt","isStringTag","defaultStyledResolver","styledEngineStyled","label","transformStyleArg","stylesArg","__emotion_real","isPlainObject","muiStyledResolver","styleArg","transformedStyleArg","_len","expressions","_key","expressionsWithDefaultTheme","map","components","styleOverrides","resolvedStyleOverrides","entries","_ref3","slotKey","slotStyle","_theme$components","numOfCustomFnsApplied","placeholders","raw","Component","muiName","withConfig","createStyled","defaultCreateStyledComponent","systemStyled","root","concat","capitalize","String","maxWidth","fixed","disableGutters","useThemePropsDefault","inProps","useThemePropsSystem","useUtilityClasses","classes","slots","composeClasses","generateUtilityClass","createStyledComponent","useThemeProps","ContainerRoot","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","breakpoints","up","values","reduce","acc","breakpointValueKey","breakpoint","value","unit","Math","max","xs","React","ref","component","other","as","clsx"],"sourceRoot":""}